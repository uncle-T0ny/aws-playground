AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Lambda with API Gateway and CodePipeline using CloudFormation

Parameters:
  S3Bucket:
    Type: AWS::SSM::Parameter::Value<String>
    Description: S3 Bucket for Lambda code
    Default: /lambda-s3-bucket
  S3Key:
    Type: AWS::SSM::Parameter::Value<String>
    Description: S3 Key for Lambda code
    Default: /lambda-s3-key

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyLambdaFunction
      Handler: index.handler
      Role: arn:aws:iam::417873687559:role/RantLambdaExecutionRole
      Runtime: nodejs20.x
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key

  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: MyApi

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: hello
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethod
    Properties:
        RestApiId: !Ref ApiGatewayRestApi
        StageName: dev

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/*/hello

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: MyPipeline
      RoleArn: arn:aws:iam::417873687559:role/RantCodePipeline
      ArtifactStore:
        Type: S3
        Location: rant-aws-sample
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                Owner: uncle-T0ny
                Repo: aws-playground
                Branch: main
                OAuthToken: "{{resolve:secretsmanager:GitHubTokenForCodePipeline:SecretString:oauthToken}}"
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: rant-lambda-stack
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: SourceArtifact::templates/main-template.yaml
                RoleArn: arn:aws:iam::417873687559:role/RantCodePipeline
              RunOrder: 1
      RestartExecutionOnUpdate: true

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/hello"