version: 0.2
env:
  variables:
    SLACK_CHANNEL_ID: C082CSTJ2J2
phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - npm install
  build:
    commands:
      - echo "Running integration tests..." && npm test > test_output.txt 2>&1; echo $? > test_exit_code.txt
  post_build:
    commands:
      - |
        #!/bin/bash
        echo "Retrieving SLACK_BOT_TOKEN from AWS Secrets Manager..."
        SLACK_BOT_TOKEN=$(aws secretsmanager get-secret-value --secret-id "arn:aws:secretsmanager:ca-central-1:417873687559:secret:SlackBotToken-rY8Mqn" --output text --query SecretString)
        
        if [ -z "$SLACK_BOT_TOKEN" ]; then
          echo "Error: Failed to retrieve SLACK_BOT_TOKEN from Secrets Manager."
          exit 1
        fi
        
        echo "Reading test exit code..."
        
        if [ ! -f test_exit_code.txt ]; then
          echo "Error: test_exit_code.txt not found. Exiting."
          exit 1
        fi
        
        test_exit_code=$(cat test_exit_code.txt | tr -d '[:space:]')
        echo "Test exit code: $test_exit_code"
        
        upload_file_to_slack() {
          local file_path="$1"
          local file_name="$2"
          local channel_id="$3"
        
          echo "Starting file upload process..."
        
          if [ ! -f "$file_path" ]; then
            echo "Error: File $file_path does not exist"
            return 1
          fi
        
          file_length=$(wc -c < "$file_path" | tr -d '[:space:]')
        
          response=$(curl -s -X GET -G \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            --data-urlencode "filename=$file_name" \
            --data-urlencode "length=$file_length" \
            https://slack.com/api/files.getUploadURLExternal)
        
          upload_url=$(echo "$response" | jq -r '.upload_url')
          file_id=$(echo "$response" | jq -r '.file_id')
        
          if [ "$upload_url" = "null" ] || [ "$file_id" = "null" ]; then
            echo "Failed to get upload URL: $response"
            return 1
          fi
        
          echo "Uploading file to $upload_url with file ID $file_path..."
        
          upload_response=$(curl -s -X POST --data-binary @"$file_path" \
            -H "Content-Type: application/octet-stream" \
            "$upload_url")
        
          echo "Upload response: $upload_response"
        
          complete_response=$(curl -s -X POST "https://slack.com/api/files.completeUploadExternal" \
                -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
                -H "Content-Type: application/json; charset=utf-8" \
                -d '{
                  "files": [{"id": "'"$file_id"'", "title": "'"$file_name"'"}],
                  "channel_id": "'"$channel_id"'"
                  }')
        
          if echo "$complete_response" | jq -e '.ok' > /dev/null; then
            return 0
          else
            return 1
          fi
        }
        
        if [ "$test_exit_code" -eq 0 ]; then
          curl -X POST \
            -H 'Content-type: application/json' \
            --data '{"text": "âœ… *Build Succeeded*: The integration tests passed successfully."}' \
            "$SLACK_WEBHOOK_URL"
        else
          curl -X POST \
            -H 'Content-type: application/json' \
            --data '{"text": "ðŸš« *Build Failed*: Uploading test results file..."}' \
            "$SLACK_WEBHOOK_URL"
        
          upload_file_to_slack "test_output.txt" "test_output.txt" "$SLACK_CHANNEL_ID"
        fi
artifacts:
  files:
    - test_output.txt
